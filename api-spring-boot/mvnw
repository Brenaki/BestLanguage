#!/bin/sh
# ----------------------------------------------------------------------------
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
# ----------------------------------------------------------------------------

# ----------------------------------------------------------------------------
# Apache Maven Wrapper startup batch script, version 3.2.0
#
# Required ENV vars:
#   JAVA_HOME - location of a JDK home dir
#
# Optional ENV vars
#   MAVEN_BATCH_ECHO - set to 'on' to enable the echoing of the batch commands
#   MAVEN_BATCH_PAUSE - set to 'on' to wait for a keystroke before ending
#   MAVEN_OPTS - parameters passed to the Java VM when running Maven
#     e.g. to debug Maven itself, use
#       set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000
#   MAVEN_SKIP_RC - flag to disable loading of mavenrc files
# ----------------------------------------------------------------------------

# ----------------------------------------------------------------------------
# Prepare Maven Wrapper
# ----------------------------------------------------------------------------

# Resolve links: $0 may be a link
mvn="$0"
while [ -h "$mvn" ]; do
  ls=`ls -ld "$mvn"`
  link=`expr "$ls" : '.*-> \(.*\)$'`
  if expr "$link" : '/.*' > /dev/null; then
    mvn="$link"
  else
    mvn=`dirname "$mvn"`"/$link"
  fi
done

# Convert relative path to absolute path
mvn_dir=`dirname "$mvn"`
mvn_dir=`cd "$mvn_dir" && pwd`
mvn="$mvn_dir"/`basename "$mvn"`

# OS specific support.  $var _must_ be set to either true or false.
cygwin=false
darwin=false
mingw=false
case "`uname`" in
  CYGWIN* )
    cygwin=true
    ;;
  Darwin* )
    darwin=true
    ;;
  MINGW* )
    mingw=true
    ;;
esac

# For Cygwin, ensure paths are in UNIX format before anything is touched
if $cygwin ; then
    [ -n "$JAVA_HOME" ] &&
        JAVA_HOME=`cygpath --unix "$JAVA_HOME"`
fi

# For Mingw, ensure paths are in UNIX format before anything is touched
if $mingw ; then
    [ -n "$JAVA_HOME" ] &&
        JAVA_HOME="`(cd "$JAVA_HOME"; pwd)`"
fi

# For Darwin, add options to specify how the application appears in the dock
if $darwin; then
    GRADLE_OPTS="$GRADLE_OPTS \"-Xdock:name=$APP_NAME\" \"-Xdock:icon=$APP_HOME/media/gradle.icns\""
fi

# For Cygwin, switch paths to Windows format before running java
if $cygwin ; then
    JAVA_HOME=`cygpath --path --windows "$JAVA_HOME"`
fi

# ----------------------------------------------------------------------------
# Execute Maven
# ----------------------------------------------------------------------------

# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules
function splitJvmOpts() {
    JVM_OPTS=("$@")
}
eval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $MAVEN_OPTS
JVM_OPTS[${#JVM_OPTS[*]}]="-Dmaven.multiModuleProjectDirectory=${MAVEN_PROJECTBASEDIR}"

exec "$JAVA_HOME/bin/java" "${JVM_OPTS[@]}" -classpath "$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.jar" "-Dmaven.home=${M2_HOME}" "-Dmaven.multiModuleProjectDirectory=${MAVEN_PROJECTBASEDIR}" ${WRAPPER_LAUNCHER} "$@"
